<Window x:Class="BookshelfConfigurator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:data="clr-namespace:BookshelfConfigurator.Data;assembly=BookshelfConfigurator.Data"
		xmlns:vm="clr-namespace:BookshelfConfigurator.ViewModel;assembly=BookshelfConfigurator.ViewModel"
		xmlns:v="clr-namespace:BookshelfConfigurator"
		xmlns:ctrl="clr-namespace:BookshelfConfigurator.Controls;assembly=BookshelfConfigurator.Controls"
		xmlns:local="clr-namespace:BookshelfConfigurator"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="MainWindow" Height="600" Width="800">
	<Window.DataContext>
		<local:MainWindowViewModel />
	</Window.DataContext>
	<Window.Resources>
		<!-- Demonstrates how to bind to a method -->
		<ObjectDataProvider ObjectType="{x:Type sys:Enum}" MethodName="GetValues" x:Key="WidthValues">
			<ObjectDataProvider.MethodParameters>
				<x:Type Type="{x:Type data:ElementWidth}" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider ObjectType="{x:Type sys:Enum}" MethodName="GetValues" x:Key="HeightValues">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="data:ElementHeight" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<!-- Simple style -->
		<Style TargetType="{x:Type Label}">
			<Setter Property="Margin" Value="0,0,3,0" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<Style TargetType="{x:Type Label}" x:Key="HeaderText">
			<Setter Property="Background" Value="LightGray" />
		</Style>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="2*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<DockPanel>
			<Label Style="{StaticResource HeaderText}" DockPanel.Dock="Top">Elements</Label>
			<!-- Demonstrate simple item template -->
			<ListBox Name="ElementsSelector" ItemsSource="{Binding Path=Shelf.Elements}"
					 HorizontalContentAlignment="Stretch">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<ComboBox ItemsSource="{Binding Source={StaticResource WidthValues}}" 
								  SelectedItem="{Binding Path=Width}" Margin="10,0,0,0"/>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</DockPanel>
		<DockPanel Grid.Row="1">
			<Label Style="{StaticResource HeaderText}" DockPanel.Dock="Top">Items</Label>
			<ListBox Name="ItemSelector" ItemsSource="{Binding ElementName=ElementsSelector, Path=SelectedItem.Items}"
					 DisplayMemberPath="Height" Padding="10,0,0,0">
			</ListBox>
		</DockPanel>
		<DockPanel Grid.Row="2">
			<Label Style="{StaticResource HeaderText}" DockPanel.Dock="Top">Item</Label>
			<Grid DataContext="{Binding ElementName=ItemSelector, Path=SelectedItem}" Margin="3">
				<Grid.Style>
					<!-- Demonstrate how to hide form if no item is selected in listbox -->
					<Style TargetType="{x:Type Grid}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=ItemSelector, Path=SelectedItem}" Value="{x:Null}">
								<Setter Property="Visibility" Value="Hidden" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Label Content="Width:" />
				<ComboBox Grid.Column="1" SelectedItem="{Binding Path=Width, ValidatesOnDataErrors=True}"
						  ItemsSource="{Binding Source={StaticResource WidthValues}, Mode=OneTime}" />

				<Label Content="Height:" Grid.Row="1" />
				<ComboBox Grid.Column="1" Grid.Row="1" SelectedItem="{Binding Path=Height}"
						  ItemsSource="{Binding Source={StaticResource HeightValues}, Mode=OneTime}"/>

				<CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Path=HasDoor}" Margin="0,4,0,0">Has Door</CheckBox>

				<Label Content="Shelfs:" Grid.Row="3" />
				<ctrl:NumericUpDown Grid.Column="1" Grid.Row="3" VerticalAlignment="Center"
									Maximum="{Binding Path=Height, Converter={StaticResource MaximumNumberOfShelfsConverter}, Mode=OneWay}" 
								    Value="{Binding Path=NumberOfShelfs, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
				<!--<TextBox Grid.Column="1" Grid.Row="3" VerticalAlignment="Center"
						 Text="{Binding Path=NumberOfShelfs, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />-->
			</Grid>
		</DockPanel>

		<GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.RowSpan="3"
					  Width="2" Background="LightGray" />

		<TabControl Grid.Column="1" Grid.RowSpan="3" Margin="10">
			<TabItem Header="ItemsControl">
				<v:ItemsControlVisualization />
			</TabItem>
			<TabItem Header="ListBox">
				<v:ListBoxVisualization />
			</TabItem>
			<TabItem Header="TreeView">
				<v:TreeVisualization />
			</TabItem>
			<TabItem Header="UserControl">
				<local:ShelfControl Bookshelf="{Binding Path=Shelf}" />
			</TabItem>
		</TabControl>
	</Grid>
</Window>
