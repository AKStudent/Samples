// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greet.proto

package greet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings.
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{1}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FromTo struct {
	From                 int32    `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FromTo) Reset()         { *m = FromTo{} }
func (m *FromTo) String() string { return proto.CompactTextString(m) }
func (*FromTo) ProtoMessage()    {}
func (*FromTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{2}
}

func (m *FromTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FromTo.Unmarshal(m, b)
}
func (m *FromTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FromTo.Marshal(b, m, deterministic)
}
func (m *FromTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FromTo.Merge(m, src)
}
func (m *FromTo) XXX_Size() int {
	return xxx_messageInfo_FromTo.Size(m)
}
func (m *FromTo) XXX_DiscardUnknown() {
	xxx_messageInfo_FromTo.DiscardUnknown(m)
}

var xxx_messageInfo_FromTo proto.InternalMessageInfo

func (m *FromTo) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *FromTo) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type NumericResult struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumericResult) Reset()         { *m = NumericResult{} }
func (m *NumericResult) String() string { return proto.CompactTextString(m) }
func (*NumericResult) ProtoMessage()    {}
func (*NumericResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{3}
}

func (m *NumericResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumericResult.Unmarshal(m, b)
}
func (m *NumericResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumericResult.Marshal(b, m, deterministic)
}
func (m *NumericResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumericResult.Merge(m, src)
}
func (m *NumericResult) XXX_Size() int {
	return xxx_messageInfo_NumericResult.Size(m)
}
func (m *NumericResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NumericResult.DiscardUnknown(m)
}

var xxx_messageInfo_NumericResult proto.InternalMessageInfo

func (m *NumericResult) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type StepByStepResult struct {
	// Types that are valid to be assigned to Payload:
	//	*StepByStepResult_Result
	//	*StepByStepResult_Error
	Payload              isStepByStepResult_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *StepByStepResult) Reset()         { *m = StepByStepResult{} }
func (m *StepByStepResult) String() string { return proto.CompactTextString(m) }
func (*StepByStepResult) ProtoMessage()    {}
func (*StepByStepResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{4}
}

func (m *StepByStepResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepByStepResult.Unmarshal(m, b)
}
func (m *StepByStepResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepByStepResult.Marshal(b, m, deterministic)
}
func (m *StepByStepResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepByStepResult.Merge(m, src)
}
func (m *StepByStepResult) XXX_Size() int {
	return xxx_messageInfo_StepByStepResult.Size(m)
}
func (m *StepByStepResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StepByStepResult.DiscardUnknown(m)
}

var xxx_messageInfo_StepByStepResult proto.InternalMessageInfo

type isStepByStepResult_Payload interface {
	isStepByStepResult_Payload()
}

type StepByStepResult_Result struct {
	Result *NumericResult `protobuf:"bytes,1,opt,name=result,proto3,oneof"`
}

type StepByStepResult_Error struct {
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*StepByStepResult_Result) isStepByStepResult_Payload() {}

func (*StepByStepResult_Error) isStepByStepResult_Payload() {}

func (m *StepByStepResult) GetPayload() isStepByStepResult_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *StepByStepResult) GetResult() *NumericResult {
	if x, ok := m.GetPayload().(*StepByStepResult_Result); ok {
		return x.Result
	}
	return nil
}

func (m *StepByStepResult) GetError() *status.Status {
	if x, ok := m.GetPayload().(*StepByStepResult_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StepByStepResult) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StepByStepResult_Result)(nil),
		(*StepByStepResult_Error)(nil),
	}
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "demo.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "demo.HelloReply")
	proto.RegisterType((*FromTo)(nil), "demo.FromTo")
	proto.RegisterType((*NumericResult)(nil), "demo.NumericResult")
	proto.RegisterType((*StepByStepResult)(nil), "demo.StepByStepResult")
}

func init() { proto.RegisterFile("greet.proto", fileDescriptor_32c0044392f32579) }

var fileDescriptor_32c0044392f32579 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x4f, 0xea, 0x40,
	0x10, 0x80, 0x29, 0x01, 0x0a, 0x03, 0xef, 0x85, 0x8c, 0x09, 0x12, 0x4e, 0xa6, 0x07, 0x25, 0x46,
	0x0b, 0x29, 0x47, 0x6f, 0x3d, 0x00, 0x17, 0x3d, 0x14, 0x4f, 0xde, 0x96, 0x32, 0x56, 0x92, 0x96,
	0x59, 0xb7, 0xdb, 0xc4, 0x9e, 0xfd, 0xe3, 0xa6, 0xbb, 0x25, 0x02, 0xf1, 0xd2, 0xcc, 0x4c, 0xbf,
	0x99, 0x69, 0xbf, 0x5d, 0xe8, 0x27, 0x8a, 0x48, 0xfb, 0x52, 0xb1, 0x66, 0x6c, 0xed, 0x28, 0xe3,
	0xc9, 0x75, 0xc2, 0x9c, 0xa4, 0x34, 0x53, 0x32, 0x9e, 0xe5, 0x5a, 0xe8, 0x22, 0xb7, 0xaf, 0x3d,
	0x0f, 0x06, 0x6b, 0x4a, 0x53, 0x8e, 0xe8, 0xb3, 0xa0, 0x5c, 0x23, 0x42, 0xeb, 0x20, 0x32, 0x1a,
	0x3b, 0x37, 0xce, 0xb4, 0x17, 0x99, 0xd8, 0xbb, 0x05, 0xa8, 0x19, 0x99, 0x96, 0x38, 0x06, 0x37,
	0xa3, 0x3c, 0x17, 0xc9, 0x11, 0x3a, 0xa6, 0xde, 0x03, 0x74, 0x96, 0x8a, 0xb3, 0x57, 0xae, 0xa6,
	0xbc, 0x2b, 0xce, 0x0c, 0xd0, 0x8e, 0x4c, 0x8c, 0xff, 0xa1, 0xa9, 0x79, 0xdc, 0x34, 0x95, 0xa6,
	0x66, 0xef, 0x0e, 0xfe, 0xbd, 0x14, 0x19, 0xa9, 0x7d, 0x1c, 0x51, 0x5e, 0xa4, 0x1a, 0x47, 0xd0,
	0x51, 0x26, 0xaa, 0xdb, 0xea, 0xcc, 0xfb, 0x82, 0xe1, 0x46, 0x93, 0x0c, 0xcb, 0xea, 0x59, 0xb3,
	0x8f, 0x67, 0x6c, 0x3f, 0xb8, 0xf2, 0xab, 0xdf, 0xf4, 0xcf, 0x06, 0xae, 0x1b, 0xc7, 0x11, 0x78,
	0x0f, 0x6d, 0x52, 0x8a, 0x95, 0x59, 0xdf, 0x0f, 0xd0, 0xb7, 0x3a, 0x7c, 0x25, 0x63, 0x7f, 0x63,
	0x74, 0xac, 0x1b, 0x91, 0x45, 0xc2, 0x1e, 0xb8, 0x52, 0x94, 0x29, 0x8b, 0x5d, 0xf0, 0x04, 0xee,
	0xaa, 0x52, 0x49, 0x0a, 0xe7, 0xd0, 0xdd, 0x88, 0xd2, 0x68, 0x40, 0xb4, 0xcb, 0x4e, 0xbd, 0x4d,
	0x86, 0x67, 0x35, 0x99, 0x96, 0xc1, 0xb7, 0x03, 0xdd, 0x67, 0xa1, 0x3f, 0x56, 0x85, 0x2a, 0x70,
	0x01, 0x83, 0x15, 0xe9, 0xe5, 0x7e, 0xcb, 0x07, 0x11, 0xc7, 0x7b, 0x1c, 0x58, 0xdc, 0xea, 0x9a,
	0xfc, 0xf5, 0xf5, 0x73, 0x07, 0x43, 0x18, 0x9d, 0x36, 0xfd, 0x4a, 0xb8, 0x68, 0x1f, 0xd9, 0xec,
	0x52, 0xd2, 0xd4, 0x99, 0x3b, 0xa1, 0xfb, 0xd6, 0x36, 0xb7, 0x61, 0xdb, 0x31, 0xe7, 0xbd, 0xf8,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x27, 0x4e, 0x4e, 0x68, 0x1d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/demo.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "greet.proto",
}

// MathGuruClient is the client API for MathGuru service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathGuruClient interface {
	GetFibonacci(ctx context.Context, in *FromTo, opts ...grpc.CallOption) (MathGuru_GetFibonacciClient, error)
	GetFibonacciStepByStep(ctx context.Context, opts ...grpc.CallOption) (MathGuru_GetFibonacciStepByStepClient, error)
}

type mathGuruClient struct {
	cc *grpc.ClientConn
}

func NewMathGuruClient(cc *grpc.ClientConn) MathGuruClient {
	return &mathGuruClient{cc}
}

func (c *mathGuruClient) GetFibonacci(ctx context.Context, in *FromTo, opts ...grpc.CallOption) (MathGuru_GetFibonacciClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MathGuru_serviceDesc.Streams[0], "/demo.MathGuru/GetFibonacci", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathGuruGetFibonacciClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MathGuru_GetFibonacciClient interface {
	Recv() (*NumericResult, error)
	grpc.ClientStream
}

type mathGuruGetFibonacciClient struct {
	grpc.ClientStream
}

func (x *mathGuruGetFibonacciClient) Recv() (*NumericResult, error) {
	m := new(NumericResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mathGuruClient) GetFibonacciStepByStep(ctx context.Context, opts ...grpc.CallOption) (MathGuru_GetFibonacciStepByStepClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MathGuru_serviceDesc.Streams[1], "/demo.MathGuru/GetFibonacciStepByStep", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathGuruGetFibonacciStepByStepClient{stream}
	return x, nil
}

type MathGuru_GetFibonacciStepByStepClient interface {
	Send(*FromTo) error
	Recv() (*StepByStepResult, error)
	grpc.ClientStream
}

type mathGuruGetFibonacciStepByStepClient struct {
	grpc.ClientStream
}

func (x *mathGuruGetFibonacciStepByStepClient) Send(m *FromTo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mathGuruGetFibonacciStepByStepClient) Recv() (*StepByStepResult, error) {
	m := new(StepByStepResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathGuruServer is the server API for MathGuru service.
type MathGuruServer interface {
	GetFibonacci(*FromTo, MathGuru_GetFibonacciServer) error
	GetFibonacciStepByStep(MathGuru_GetFibonacciStepByStepServer) error
}

// UnimplementedMathGuruServer can be embedded to have forward compatible implementations.
type UnimplementedMathGuruServer struct {
}

func (*UnimplementedMathGuruServer) GetFibonacci(req *FromTo, srv MathGuru_GetFibonacciServer) error {
	return status1.Errorf(codes.Unimplemented, "method GetFibonacci not implemented")
}
func (*UnimplementedMathGuruServer) GetFibonacciStepByStep(srv MathGuru_GetFibonacciStepByStepServer) error {
	return status1.Errorf(codes.Unimplemented, "method GetFibonacciStepByStep not implemented")
}

func RegisterMathGuruServer(s *grpc.Server, srv MathGuruServer) {
	s.RegisterService(&_MathGuru_serviceDesc, srv)
}

func _MathGuru_GetFibonacci_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FromTo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MathGuruServer).GetFibonacci(m, &mathGuruGetFibonacciServer{stream})
}

type MathGuru_GetFibonacciServer interface {
	Send(*NumericResult) error
	grpc.ServerStream
}

type mathGuruGetFibonacciServer struct {
	grpc.ServerStream
}

func (x *mathGuruGetFibonacciServer) Send(m *NumericResult) error {
	return x.ServerStream.SendMsg(m)
}

func _MathGuru_GetFibonacciStepByStep_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MathGuruServer).GetFibonacciStepByStep(&mathGuruGetFibonacciStepByStepServer{stream})
}

type MathGuru_GetFibonacciStepByStepServer interface {
	Send(*StepByStepResult) error
	Recv() (*FromTo, error)
	grpc.ServerStream
}

type mathGuruGetFibonacciStepByStepServer struct {
	grpc.ServerStream
}

func (x *mathGuruGetFibonacciStepByStepServer) Send(m *StepByStepResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mathGuruGetFibonacciStepByStepServer) Recv() (*FromTo, error) {
	m := new(FromTo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MathGuru_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.MathGuru",
	HandlerType: (*MathGuruServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetFibonacci",
			Handler:       _MathGuru_GetFibonacci_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetFibonacciStepByStep",
			Handler:       _MathGuru_GetFibonacciStepByStep_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "greet.proto",
}
