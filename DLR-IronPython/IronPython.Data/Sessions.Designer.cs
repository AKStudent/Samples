//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SessionsModel", "FK_Session_Speaker", "Speaker", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IronPython.Data.Speaker), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IronPython.Data.Session), true)]

#endregion

namespace IronPython.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SamplesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SamplesEntities object using the connection string found in the 'SamplesEntities' section of the application configuration file.
        /// </summary>
        public SamplesEntities() : base("name=SamplesEntities", "SamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SamplesEntities object.
        /// </summary>
        public SamplesEntities(string connectionString) : base(connectionString, "SamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SamplesEntities object.
        /// </summary>
        public SamplesEntities(EntityConnection connection) : base(connection, "SamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speaker> Speakers
        {
            get
            {
                if ((_Speakers == null))
                {
                    _Speakers = base.CreateObjectSet<Speaker>("Speakers");
                }
                return _Speakers;
            }
        }
        private ObjectSet<Speaker> _Speakers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Speakers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeakers(Speaker speaker)
        {
            base.AddObject("Speakers", speaker);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SessionsModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="speakerID">Initial value of the SpeakerID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        public static Session CreateSession(global::System.Guid sessionID, global::System.Guid speakerID, global::System.String title, global::System.Boolean approved)
        {
            Session session = new Session();
            session.SessionID = sessionID;
            session.SpeakerID = speakerID;
            session.Title = title;
            session.Approved = approved;
            return session;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                if (_SessionID != value)
                {
                    OnSessionIDChanging(value);
                    ReportPropertyChanging("SessionID");
                    _SessionID = StructuralObject.SetValidValue(value, "SessionID");
                    ReportPropertyChanged("SessionID");
                    OnSessionIDChanged();
                }
            }
        }
        private global::System.Guid _SessionID;
        partial void OnSessionIDChanging(global::System.Guid value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpeakerID
        {
            get
            {
                return _SpeakerID;
            }
            set
            {
                OnSpeakerIDChanging(value);
                ReportPropertyChanging("SpeakerID");
                _SpeakerID = StructuralObject.SetValidValue(value, "SpeakerID");
                ReportPropertyChanged("SpeakerID");
                OnSpeakerIDChanged();
            }
        }
        private global::System.Guid _SpeakerID;
        partial void OnSpeakerIDChanging(global::System.Guid value);
        partial void OnSpeakerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value, "Approved");
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SessionsModel", "FK_Session_Speaker", "Speaker")]
        public Speaker Speaker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speaker>("SessionsModel.FK_Session_Speaker", "Speaker").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speaker>("SessionsModel.FK_Session_Speaker", "Speaker").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speaker> SpeakerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speaker>("SessionsModel.FK_Session_Speaker", "Speaker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speaker>("SessionsModel.FK_Session_Speaker", "Speaker", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SessionsModel", Name="Speaker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speaker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speaker object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="speakerID">Initial value of the SpeakerID property.</param>
        public static Speaker CreateSpeaker(global::System.String firstName, global::System.String lastName, global::System.Guid speakerID)
        {
            Speaker speaker = new Speaker();
            speaker.FirstName = firstName;
            speaker.LastName = lastName;
            speaker.SpeakerID = speakerID;
            return speaker;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpeakerID
        {
            get
            {
                return _SpeakerID;
            }
            set
            {
                if (_SpeakerID != value)
                {
                    OnSpeakerIDChanging(value);
                    ReportPropertyChanging("SpeakerID");
                    _SpeakerID = StructuralObject.SetValidValue(value, "SpeakerID");
                    ReportPropertyChanged("SpeakerID");
                    OnSpeakerIDChanged();
                }
            }
        }
        private global::System.Guid _SpeakerID;
        partial void OnSpeakerIDChanging(global::System.Guid value);
        partial void OnSpeakerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true, "Company");
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SessionsModel", "FK_Session_Speaker", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("SessionsModel.FK_Session_Speaker", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("SessionsModel.FK_Session_Speaker", "Session", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
