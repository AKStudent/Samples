trigger:
  branches:
    include:
    - master
  paths:
    include:
    - CSharpDesignWorkshop/PolygonDesigner/*

variables:
  buildConfiguration: debug
  
pool:
  vmImage: 'windows-latest'

steps:
- task: UseDotNet@2
  displayName: 'Make sure required .NET Core version is installed'
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build projects'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run tests and generate code coverate'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: -c $(BuildConfiguration) --collect:"XPlat Code Coverage"

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator tool for converting code coverage reports'
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  
- script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: 'Convert code coverage report'
  
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

- task: ArchiveFiles@2
  displayName: 'Create ZIP file with WPF app'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/PolygonDesigner/bin/$(buildConfiguration)/netcoreapp3.1' 
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.SourcesDirectory)/PolygonDesigner-$(Build.BuildId).zip'

- publish: '$(Build.SourcesDirectory)/PolygonDesigner-$(Build.BuildId).zip'
  displayName: 'Publish generated WPF app'
  artifact: Executable
